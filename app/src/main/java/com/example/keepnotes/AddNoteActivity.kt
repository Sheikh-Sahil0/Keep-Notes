package com.example.keepnotes

import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.example.keepnotes.databinding.ActivityAddNoteBinding

class AddNoteActivity : AppCompatActivity() {
    private lateinit var binding: ActivityAddNoteBinding
    // Declare the database from the notesDatabaseHelper class
    private lateinit var db : NotesDatabaseHelper
    // Variable to track pin status (0 for unpinned, 1 for pinned)
    private var isPinned = 0
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityAddNoteBinding.inflate(layoutInflater)
        setContentView(binding.root)

        // Initialize the db
        db = NotesDatabaseHelper(this)

        // Closing the activity when user clicks on close button
        binding.btnClose.setOnClickListener {
            finish()
        }

        binding.btnPinAdd.setOnClickListener {
            isPinned = if (isPinned == 0) 1 else 0
            updatePinButton()
        }

        // Storing the data by on clicking the done button
        binding.imgDoneBtn.setOnClickListener{
            saveNote()
        }
    }

    private fun updatePinButton() {
        if (isPinned == 1) {
            binding.btnPinAdd.setImageResource(R.drawable.ic_unpin)
        } else {
            binding.btnPinAdd.setImageResource(R.drawable.ic_pin)
        }
    }

    private fun saveNote() {
        val title = binding.edtEditTitle.text.toString()
        val content = binding.edtContent.text.toString()

        if (title.isNotEmpty()) {
            val note = Note(
                id = 0, // Auto-generated by the database
                title = title,
                content = content,
                isPinned = isPinned, // Store the pin status as 0 or 1
                noteDate = System.currentTimeMillis().toString() // Store the date of the note created
            )
            db.insertNote(note)
            finish()
        } else {
            Toast.makeText(this, "Title cannot be empty", Toast.LENGTH_SHORT).show()
        }
    }
}